#include <bits/stdc++.h>
using namespace std;

int lcs_solver(string s1, int i, string s2, int j, vector<vector<int>> &dp) {
    if (i == 0 || j == 0) {
        return 0;
    }

    if (dp[i][j] != -1) {
        return dp[i][j];
    }

    if (s1[i - 1] == s2[j - 1]) {
        dp[i][j] = 1 + lcs_solver(s1, i - 1, s2, j - 1, dp);
    } else {
        dp[i][j] = max(lcs_solver(s1, i - 1, s2, j, dp),
                       lcs_solver(s1, i, s2, j - 1, dp));
    }

    return dp[i][j];
}

int lcs(string s1, string s2) {
    int m = s1.length();
    int n = s2.length();

    vector<vector<int>> dp(m + 1, vector<int>(n + 1, -1));
    return lcs_solver(s1, m, s2, n, dp); // âœ… not m+1, just m
}

int main() {
    string s1 = "AGGTAB";
    string s2 = "GXTXAYB";

    cout << lcs(s1, s2) << endl;
}
